l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
set.seed(123)
z<- rGI0(1000, p_alpha=-3, p_gamma=2, p_Looks=3)
descdist(z, boot=500)
library(devtools)
setwd("~/Documents/VIC UNI/2023 T2/DATA501/GI0/Package")
build("GIO")
build("GIO")
setwd("~/Documents/VIC UNI/2023 T2/DATA501/GI0/Package/GI0")
build()
build_vignettes()
.Last.error.trace
install()
?GI0
??GI0
?sGI0
?dGI0
??dGI0
require("GI0")
?dGI0
?pGI0
library(GI0)
require("GI0")
View(dGI0)
View(dGI0)
install("GI0")
setwd("~/Documents/VIC UNI/2023 T2/DATA501/GI0/Package")
install("GI0")
load_all("GI0")
View(dGI0)
View(dGI0)
?dPGI0
?pGI0
pGI0
library(GI0)
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "Probability", main="Cumulative Distribution Function for GI0")
x <- seq(0, 10, length=100)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "Density", main="GI0 Densities")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "Probability", main="Cumulative Distribution Function for GI0")
lines(x, pGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, pGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x,pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "bottomright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
#Semi-log scale
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Probability)", main="Cumulative Distribution Function for GI0", log="y")
lines(x, pGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, pGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "bottomright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
build_vignettes("GI0")
devtools::load_all("GI0")
library(GI0)
dGI0
library(GI0)
install("GI0")
getwd()
require("GI0")
load_all("GI0")
View(dGI0)
library(GI0)
x <- seq(0, 10, length=100)
plot(x, GI0::dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "Density", main="GI0 Densities")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
View(dGI0)
build("GI0")
x <- seq(0, 10, length=100)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "Density", main="GI0 Densities")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "Probability", main="Cumulative Distribution Function for GI0")
lines(x, pGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, pGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x,pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "bottomright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
#Semi-log scale
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Probability)", main="Cumulative Distribution Function for GI0", log="y")
lines(x, pGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, pGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "bottomright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
devtools::install("GI0", build_vignette = FALSE)
require("GI0")
library(GI0)
devtools::load_all("GI0")
dGI0
setwd("~/Documents/VIC UNI/2023 T2/DATA501/GI0/Package/GI0")
install()
require()
require("GI0")
install()
build()
getwd()
setwd("~/Documents/VIC UNI/2023 T2/DATA501/GI0/Package")
install("GI0")
setwd("~/Documents/VIC UNI/2023 T2/DATA501/GI0/Package/GI0")
getwd()
document()
install()
require("GIO")
require("GI0")
build_vignettes()
View(rGI0)
View(qGI0)
View(qGI0)
x <- seq(0, 10, length=100)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "Density", main="GI0 Densities")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
x <- seq(0, 10, length=100)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "Density", main="GI0 Densities")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
x <- seq(0, 10, length=100)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "Density", main="GI0 Densities")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 1,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 1)
x <- seq(0, 10, length=100)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "Density", main="GI0 Densities",
ylim=c(0,1.5))
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
x <- seq(0, 10, length=100)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "Density", main="GI0 Densities",
ylim=c(0,1))
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "log(Density)", main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
x <- seq(0, 10, length=100)
dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1)
(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2)
View(dGI0)
View(dGI0)
dGI02 <- function(x, p_alpha, p_gamma, p_Looks)
{
if (p_alpha < 0 & p_gamma > 0 & p_Looks >= 1) {
return(df(-p_alpha * x/p_gamma, df1 = 2 * p_Looks, df2 = -2 * p_alpha)))
}
else {
print("Invalid parameters: check alpha is less than 0, gamma is greater than 0, and looks is greater than or equal to 1")
}
}
dGI02 <- function(x, p_alpha, p_gamma, p_Looks){
if (p_alpha < 0 & p_gamma > 0 & p_Looks >= 1) {
return(df(-p_alpha * x/p_gamma, df1 = 2 * p_Looks, df2 = -2 * p_alpha)))
}
else {
print("Invalid parameters: check alpha is less than 0, gamma is greater than 0, and looks is greater than or equal to 1")
}
}
dGI02 <- function(x, p_alpha, p_gamma, p_Looks) {
if (p_alpha < 0 & p_gamma > 0 & p_Looks >= 1){
return(df(-p_alpha * x/p_gamma, df1 = 2 * p_Looks, df2 = -2 * p_alpha)))
}
else {
print("Invalid parameters: check alpha is less than 0, gamma is greater than 0, and looks is greater than or equal to 1")
}
}
dGI02 <- function(x, p_alpha, p_gamma, p_Looks) {
if (p_alpha < 0 & p_gamma > 0 & p_Looks >= 1){
return(df(-p_alpha * x/p_gamma, df1 = 2 * p_Looks, df2 = -2 * p_alpha)))
}
}
dGI02 <- function(x, p_alpha, p_gamma, p_Looks) {
if (p_alpha < 0 & p_gamma > 0 & p_Looks >= 1){
return(df(-p_alpha * x/p_gamma, df1 = 2 * p_Looks, df2 = -2 * p_alpha))
}
else {
print("Invalid parameters: check alpha is less than 0, gamma is greater than 0, and looks is greater than or equal to 1")
}
}
plot(x, dGI02(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2)
x <- seq(0.01, 10, length=100)
dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2)
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "Probability", main="Cumulative Distribution Function for GI0")
lines(x, pGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, pGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x,pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "bottomright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
#Semi-log scale
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "log(Probability)", main="Cumulative Distribution Function for GI0", log="y")
lines(x, pGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, pGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "bottomright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "Probability", main="Cumulative Distribution Function for GI0")
lines(x, pGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, pGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x,pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "bottomright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
#Semi-log scale
plot(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "log(Probability)", main="Cumulative Distribution Function for GI0", log="y")
lines(x, pGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, pGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, pGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "bottomright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
p <- seq(0,1,length=50)
plot(p,qGI0(p, p_alpha=-1, p_gamma=2, p_Looks=2), type = "l", lwd = 2,
xlab = expression(italic(p)), ylab = "Quantile", main="Quantile Function for GI0")
lines(p, qGI0(p, p_alpha=-2, p_gamma=2, p_Looks=2), col="red",lty=1, lwd = 2)
lines(p,qGI0(p, p_alpha=-1, p_gamma=2, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "topleft",
legend = c(l1, l2, l4),
lty = c(1,1,1),
col = c("black", "red","green"),
lwd = 2)
# Semi-log scale
plot(p,qGI0(p, p_alpha=-1, p_gamma=2, p_Looks=2), type = "l", lwd = 2,
xlab = expression(italic(p)), ylab = "log(Quantile)", main="Quantile Function for GI0", log="y")
lines(p, qGI0(p, p_alpha=-2, p_gamma=2, p_Looks=2), col="red",lty=1, lwd = 2)
lines(p,qGI0(p, p_alpha=-1, p_gamma=2, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "topleft",
legend = c(l1, l2, l4),
lty = c(1,1,1),
col = c("black", "red","green"),
lwd = 2)
# Sample from the GI0 distirbution
set.seed(111)
z<- rGI0(1000, p_alpha=-2, p_gamma=4, p_Looks=3)
df <- data.frame(z)
# Plot a histogram of the random draws, overlay the kernel density
# Use Freedman-Diaconis equation for to calcuate the number of bins
hist(df$z, breaks = "Freedman-Diaconis", prob=TRUE,
xlab=expression(italic(z)), ylab="Density", main="Distribution of 1000 random draws from GI0 distribution")
lines(density(df$z), col = "blue", lwd=2)
hist(df$z, breaks = "Freedman-Diaconis", prob=TRUE,
xlab=expression(italic(z)), ylab="Density", main="Distribution of 1000 random draws from GI0 distribution",xlim = c(0, 20))
lines(density(df$z), col = "blue", lwd=2)
hist(df$z, breaks = "Freedman-Diaconis", prob=TRUE,
xlab=expression(italic(z)), ylab="Density", main="Distribution of 1000 random draws from GI0 distribution",xlim = c(0, 20))
lines(density(df$z), col = "blue", lwd=2)
# set.seed(123)
# rGI0(1000, p_alpha=-3, p_gamma=2, p_Looks=3)
knitr::include_graphics("CullenFreyPlot.png")
x <- seq(0.001, 10, length=100)
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "Density",
main="GI0 Densities")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
l1<- expression(paste(alpha, "=-1 ", gamma, "=1 L=1"))
l2<- expression(paste(alpha, "=-2 ", gamma, "=1 L=1"))
l3<- expression(paste(alpha, "=-1 ", gamma, "=5 L=1"))
l4<- expression(paste(alpha, "=-1 ", gamma, "=1 L=3"))
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
# Semi log scale
plot(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=1), type = "l", lwd = 2,
xlab = expression(italic(z)), ylab = "log(Density)",
main="GI0 Densities", log="y")
lines(x, dGI0(x, p_alpha=-2, p_gamma=1, p_Looks=1), col="red",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=5, p_Looks=1), col="blue",lty=1, lwd = 2)
lines(x, dGI0(x, p_alpha=-1, p_gamma=1, p_Looks=3), col="green",lty=1, lwd = 2)
legend(x = "topright",
legend = c(l1, l2, l3, l4),
lty = c(1,1,1,1),
col = c("black", "red","blue","green"),
lwd = 2)
build_vignettes()
?dplyr
library(dplyr)
?dplyr
?GI0
??GI0
?select
build()
?dGI0
?rGI0
